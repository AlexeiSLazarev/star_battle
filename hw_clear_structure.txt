Проект 1.

Базовая версия.
https://github.com/AlexeiSLazarev/star_battle/blob/d47ae75bf83838754992cb9ada03aaa23394e906/star_battle2.py#L1

Версия после рефакторинга.
https://github.com/AlexeiSLazarev/star_battle/blob/d47ae75bf83838754992cb9ada03aaa23394e906/start_battle_v2_2.py#L1

Что сделано:
- Устранено дублирование кода. 
- Создан общий для движущихся объектов класс GameObject.
- Ship, Asteroid, Lazer - теперь наследуются от GameObject.
- Логика обработки ввода и таймер разнесены между HandOfGod и World.
- Код сжался ~ в 1.5 раза.

Рефлексия: Процесс осмысления, анализа и проектирования занимает раз в 10 больше времени,
чем собственно написание кода. На текущий момент процесс проектирования больше похож на изобретательство
велосипеда вслепую с ясными элементами мозаики, как, например, выделение объектов -> проектирование АТД ->
разделение методов вывода и изменения состояния... Вопросы начинают возникать на следующем уровне - где определить
обработчик таймера, использовать ли фабрику для генерации лазеров, где и как организовывать статические и 
динамические объекты мира и т.д.

Необходимо нарабатывать навыки и мышления проектирования, чтобы
процесс выстраивал.

Вторым проекто решил написать более сложную игру (шутер с умными противниками и разрушаемой средой) и похоже открыл ящик пандоры.
Начиная с подготовки описания все становится очень весело (по объему), если хотя бы чуть чуть приедрживаться правил разработки и
ведения документации.


